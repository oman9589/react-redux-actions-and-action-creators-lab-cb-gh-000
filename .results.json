{
  "stats": {
    "suites": 6,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2017-10-02T17:32:44.076Z",
    "end": "2017-10-02T17:32:44.238Z",
    "duration": 162
  },
  "tests": [
    {
      "title": "returns the add movies action",
      "fullTitle": "movie actions adding a movie returns the add movies action",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the delete movies action",
      "fullTitle": "movie actions deleting a movie returns the delete movies action",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the update username action",
      "fullTitle": "username actions updating a username returns the update username action",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resets a username to default",
      "fullTitle": "username actions resetting a username resets a username to default",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: (0 , _actions.resetUsername) is not a function\n    at Context.<anonymous> (test/index-test.js:35:20)",
        "message": "(0 , _actions.resetUsername) is not a function"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "resets a username to default",
      "fullTitle": "username actions resetting a username resets a username to default",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: (0 , _actions.resetUsername) is not a function\n    at Context.<anonymous> (test/index-test.js:35:20)",
        "message": "(0 , _actions.resetUsername) is not a function"
      }
    }
  ],
  "passes": [
    {
      "title": "returns the add movies action",
      "fullTitle": "movie actions adding a movie returns the add movies action",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the delete movies action",
      "fullTitle": "movie actions deleting a movie returns the delete movies action",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the update username action",
      "fullTitle": "username actions updating a username returns the update username action",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}